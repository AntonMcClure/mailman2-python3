#! @PYTHON@
#
# Copyright (C) 2001-2018 by the Free Software Foundation, Inc.
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,
# USA.

"""List all the owners of a mailing list.

Usage: %(program)s [options] listname ...

Where:

    --all-vhost=vhost
    -v=vhost
        List the owners of all the mailing lists for the given virtual host.

    --all
    -a
        List the owners of all the mailing lists on this system.

    --help
    -h
        Print this help message and exit.

`listname' is the name of the mailing list to print the owners of.  You can
have more than one named list on the command line.
"""
from __future__ import print_function

import sys
import argparse

import paths
from Mailman import MailList, Utils
from Mailman import Errors
from Mailman.i18n import C_

COMMASPACE = ', '

program = sys.argv[0]


def usage(code, msg=''):
    if code:
        fd = sys.stderr
    else:
        fd = sys.stdout
    print(C_(__doc__), file=fd)
    if msg:
        print(msg, file=fd)
    sys.exit(code)


def main():
    parser = argparse.ArgumentParser(description='List all the owners of a mailing list.')
    parser.add_argument('listnames', nargs='*', help='Name(s) of the mailing list(s) to print the owners of')
    parser.add_argument('-v', '--all-vhost',
                       help='List the owners of all the mailing lists for the given virtual host')
    parser.add_argument('-a', '--all', action='store_true',
                       help='List the owners of all the mailing lists on this system')

    args = parser.parse_args()

    listnames = [x.lower() for x in args.listnames]
    if args.all:
        listnames = Utils.list_names()
    elif args.all_vhost:
        listnames = Utils.list_names()

    for listname in listnames:
        # Ensure listname is a string
        if isinstance(listname, bytes):
            listname = listname.decode('utf-8', 'replace')
        try:
            mlist = MailList.MailList(listname, lock=0)
        except Errors.MMListError:
            print('No such list: %s' % listname)
            continue

        if args.all_vhost and args.all_vhost != mlist.host_name:
            continue

        # Ensure owners are strings
        owners = [owner.decode('utf-8', 'replace') if isinstance(owner, bytes) else owner for owner in mlist.owner]
        owners_str = ', '.join(owners)
        print('List: %s, \tOwners: %s' % (listname, owners_str))


if __name__ == '__main__':
    main()
