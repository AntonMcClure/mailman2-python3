#! @PYTHON@
#
# Copyright (C) 2002-2018 by the Free Software Foundation, Inc.
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,
# USA.

"""Inject a message from a file into Mailman's incoming queue.

Usage: inject [options] [filename]

Options:

    -h / --help
        Print this text and exit.

    -l listname
    --listname=listname
        The name of the list to inject this message to.  Required.

    -q queuename
    --queue=queuename
        The name of the queue to inject the message to.  The queuename must be
        one of the directories inside the qfiles directory.  If omitted, the
        incoming queue is used.

filename is the name of the plaintext message file to inject.  If omitted,
standard input is used.
"""
from __future__ import print_function

import sys
import os
import argparse

import paths
from Mailman import mm_cfg
from Mailman import Utils
from Mailman import Post
from Mailman.i18n import C_


def parse_args():
    parser = argparse.ArgumentParser(description='Inject a message from a file into Mailman\'s incoming queue.')
    parser.add_argument('-l', '--listname', required=True,
                       help='The name of the list to inject this message to')
    parser.add_argument('-q', '--queue',
                       help='The name of the queue to inject the message to')
    parser.add_argument('filename', nargs='?',
                       help='The name of the plaintext message file to inject')
    return parser.parse_args()


def main():
    args = parse_args()

    qdir = mm_cfg.INQUEUE_DIR
    if args.queue:
        qdir = os.path.join(mm_cfg.QUEUE_DIR, args.queue)
        if not os.path.isdir(qdir):
            print(C_('Bad queue directory: %(qdir)s'), file=sys.stderr)
            sys.exit(1)

    listname = args.listname.lower()
    if not Utils.list_exists(listname):
        print(C_('No such list: %(listname)s'), file=sys.stderr)
        sys.exit(1)

    if args.filename:
        with open(args.filename) as fp:
            msgtext = fp.read()
    else:
        msgtext = sys.stdin.read()

    Post.inject(listname, msgtext, qdir=qdir)


if __name__ == '__main__':
    main()
